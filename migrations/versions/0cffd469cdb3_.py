"""empty message

Revision ID: 0cffd469cdb3
Revises: 
Create Date: 2023-12-11 11:44:25.104328

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0cffd469cdb3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('goods',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('presence', sa.Boolean(), nullable=False),
    sa.Column('price', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('managers',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('patronymic', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('providers',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'USER', name='userrole'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('good_category',
    sa.Column('good_id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('category_id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['good_id'], ['goods.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('good_id', 'category_id')
    )
    op.create_table('orders',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('manager_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['manager_id'], ['managers.id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('provider_orders',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('manager_id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('provider_id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['manager_id'], ['managers.id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['provider_id'], ['providers.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id', 'manager_id', 'provider_id')
    )
    op.create_table('storages',
    sa.Column('good_id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('free', sa.BigInteger(), nullable=False),
    sa.Column('reserved', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['good_id'], ['goods.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('good_id')
    )
    op.create_table('accounts',
    sa.Column('order_id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('promocode', sa.Float(), nullable=False),
    sa.Column('benefit', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('order_id')
    )
    op.create_table('carts',
    sa.Column('order_id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('promocode', sa.Float(), nullable=False),
    sa.Column('benefit', sa.BigInteger(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('order_id')
    )
    op.create_table('good_order',
    sa.Column('good_id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('order_id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.ForeignKeyConstraint(['good_id'], ['goods.id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('good_id', 'order_id')
    )
    op.create_table('good_cart',
    sa.Column('good_id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('cart_id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.ForeignKeyConstraint(['cart_id'], ['carts.order_id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['good_id'], ['goods.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('good_id', 'cart_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('good_cart')
    op.drop_table('good_order')
    op.drop_table('carts')
    op.drop_table('accounts')
    op.drop_table('storages')
    op.drop_table('provider_orders')
    op.drop_table('orders')
    op.drop_table('good_category')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('providers')
    op.drop_table('managers')
    op.drop_table('goods')
    op.drop_table('categories')
    # ### end Alembic commands ###
